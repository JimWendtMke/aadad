{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-216456583e25428faed77a4328eb6552448b3ca5a60c594cca6093d48f5332766845debfe0c05c76cc89e95f1f958caf3ad9253a229c2cc3a570b8ec03f2b4c7",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-dd935379556bea049e679b121f6543eee1123d70637965925131f97f6a716d5ff40b42c92f9c098ac89c2a70b17f2b3005f07100aad26c90e07987688ef6de9a",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                }
            ],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "messages",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "navigation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "title",
                    "defaultValue": "'developer'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "collapseAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "expandAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nodeSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "recursiveToggle",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isExpand",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isExpand",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TreeNode } from 'primeng/api';\nimport { MessageService } from 'primeng/api';\n\nimport { Navigation } from './navigation';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [ MessageService ]\n})\n\nexport class AppComponent implements OnInit {\n  title = 'developer';\n  navigation: any;\n  messages: any = [];\n\n  constructor(\n    private router: Router,\n    private messageService: MessageService\n  ) {\n    this.navigation = Navigation;\n  }\n\n  ngOnInit() {\n    this.messageService.messageObserver.subscribe((message: any) => {\n      if (message.key === 'banner') {\n        this.messages.push({severity:'info', summary:'Info Message', detail:'PrimeNG rocks'});\n      } else if (message.key === 'toast') {\n      }\n    });\n  }\n\n  nodeSelect(event) {\n    if (event.node.type === 'navigation' && event.node.data) {\n      this.router.navigateByUrl(event.node.data);\n    }\n  }\n\n  expandAll(){\n    this.messageService.clear();\n    this.messageService.add({severity:'success', summary:'Service Message', detail:'Via MessageService'});\n    this.navigation.forEach(node => {\n      this.recursiveToggle(node, true);\n    });\n  }\n\n  collapseAll(){\n    this.navigation.forEach( node => {\n      this.recursiveToggle(node, false);\n    });\n  }\n\n  recursiveToggle(node:TreeNode, isExpand:boolean){\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach( childNode => {\n        this.recursiveToggle(childNode, isExpand);\n      });\n    }\n  }\n\n\n\n  show() {\n    this.messages.push({severity:'info', summary:'Info Message', detail:'PrimeNG rocks'});\n  }\n\nclear() {\n    this.messages = [];\n}\n\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body {\n    height: 100%;\n    width: 100%;\n}\n\n.banner {\n    position: fixed;\n    top: 0px;\n    left: 50%;\n    z-index: 1001;\n    margin-left: -300px;\n    width: 600px;\n}\n.demo-header {\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    z-index: 1000;\n    background-color: #343a40;\n    margin-bottom: 0px;\n    padding: 15px;\n    text-align: center;\n    h1 {\n        color: orange;\n        font-size: 40px;\n        font-weight: 200;\n        margin-top: 22px;\n    }\n    .icon {\n        height: 100px;\n        width: 100px;\n        border-radius: 50%;\n        // background-image: url(../assets/icon-100px.png);\n        display: block;\n        background-repeat: no-repeat;\n        background-color: #ffffff;\n        float: left;\n        margin-left: 35px;\n    }\n}\n.content-wrapper{\n    position: absolute;\n    top: 130px;\n    left: 0px;\n    bottom: 0px;\n    width: 100%;\n    font-family: 'Open Sans', sans-serif;\n    display: flex;\n    margin-left: -10px;\n    .left {\n        background-color: #343a40;\n        width: 300px;\n        min-width: 300px;\n        max-width: 300px;\n        box-shadow: -6px 10px 4px 8px #c8c8c8;\n    }\n    .right{\n      width: calc(100% - #{300px});\n      padding: 50px;\n    }\n}\n\n:host ::ng-deep .p-datatable-tbody tr td:nth-child(1) {\n    text-transform: none !important;\n}\n  \n/**\n* Navigation Tree styles\n*/\n:host ::ng-deep .p-tree {\n    width: 300px;\n    background-color: #343a40;\n    border: none;\n    color: white;\n    font-family: \"Open Sans\";\n    font-size: 13px;\n    font-weight: 600;\n    line-height: 20px;\n    text-decoration: none;\n}\n:host ::ng-deep .p-tree .p-tree-container .p-treenode .p-treenode-content .p-tree-toggler:enabled:hover {\n    color: orange;\n    border-color: transparent;\n    background: transparent;\n}\n:host ::ng-deep .p-tree .p-tree-container .p-treenode .p-treenode-content .p-tree-toggler:focus {\n    box-shadow: 0 0 0 1px transparent;\n}\n:host ::ng-deep .p-tree .p-tree-container .p-treenode .p-treenode-content.p-highlight {\n    background-color: orange;\n    color: #ffffff;\n}\n:host ::ng-deep .p-tree .p-tree-container .p-treenode .p-treenode-content:focus {\n    box-shadow: 0 0 0 0.2rem orange;\n}\n\n/**\n* Tab styles\n*/\n:host ::ng-deep .p-tabview .p-tabview-nav li .p-tabview-nav-link:not(.p-disabled):focus {\n    outline: 0 none;\n    outline-offset: 0;\n    box-shadow: 0 0 0 0.2rem orange;\n}\n:host ::ng-deep .p-tabview .p-tabview-nav li.p-highlight .p-tabview-nav-link {\n    background-color: orange;\n    border-color: orange;\n}\n\n/**\n* Button styles\n*/\n:host ::ng-deep .docs-button.p-button {\n    background: #f4f4f4;;\n    color: #333333;\n    border-color: #b6b6b6;\n}\n:host ::ng-deep .docs-button.p-button.p-button-text {\n    background-color: transparent;\n    color: #343a40;\n    border-color: transparent;\n}\n:host ::ng-deep .docs-button.cux-button.p-button:enabled:hover {\n    background: #dbdbdb;\n    color: #343a40;\n    border-color: transparent;\n}\n\n:host ::ng-deep .docs-button.p-button:enabled:focus {\n    outline: 0 none;\n    outline-offset: 0;\n    box-shadow: 0 0 0 0.2rem orange;\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"banner\">\n  <p-messages [(value)]=\"messages\"></p-messages>\n</div>\n<p-toast></p-toast>\n\n\n\n<div class=\"demo-header\">\n  <span class=\"icon\"></span>\n  <h1>DOCUMENTATION LIBRARY</h1>\n</div>\n\n<!--\n<gux-banner></gux-banner>\n-->\n\n<div class=\"content-wrapper\">\n  <span class=\"left\">\n\n    <div style=\"margin:20px; text-align: center;\">\n      <button\n        pButton\n        type=\"button\"\n        class=\"docs-button p-button-sm p-button-secondary\"\n        icon=\"pi pi-plus\"\n        iconPos=\"left\"\n        label=\"Expand all\"\n        (click)=\"expandAll()\"\n        style=\"margin-right:.5rem\"\n      ></button>\n      <button\n        pButton\n        type=\"button\"\n        class=\"docs-button p-button-sm p-button-secondary\"\n        icon=\"pi pi-minus\"\n        iconPos=\"left\"\n        label=\"Collapse all\"\n        (click)=\"collapseAll()\"\n      ></button>\n    </div>\n\n    <p-tree\n        class=\"navTree\"\n        [value]=\"navigation\"\n        selectionMode=\"single\"\n        (onNodeSelect)=\"nodeSelect($event)\"\n    ></p-tree>\n  </span>\n\n  <div class=\"right\" style=\"overflow-y:auto\">\n    <router-outlet></router-outlet>\n  </div>\n\n</div>"
        },
        {
            "name": "DocsComponent",
            "id": "component-DocsComponent-85f89e3e2d75955e698b1089e50779c2ff6e26a52dc042a8c513275b817fe1417894c334584c8b412a132e3dc3500cfabd1b5731adb13c786ef894d87ecd11a3",
            "file": "src/app/docs/docs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                }
            ],
            "selector": "app-docs",
            "styleUrls": [
                "./docs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./docs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleMessage",
                    "args": [
                        {
                            "name": "messagePacket",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "messagePacket",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-docs',\n  templateUrl: './docs.component.html',\n  styleUrls: ['./docs.component.scss'],\n  providers: [ MessageService ]\n})\nexport class DocsComponent implements OnInit {\n\n  constructor(\n    private messageService: MessageService\n  ) { }\n\n  ngOnInit(): void {\n    this.handleMessage('yo');\n  }\n\n  handleMessage(messagePacket) {\n    this.messageService.add({\n      key: 'banner',\n      severity: 'info',\n      summary: 'Message Bus Event',\n      detail: 'packet data details'\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./docs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>docs works!</p>\n\n<button type=\"button\" (click)=\"handleMessage('yo')\">Handle Message</button>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-4e92778e0618422324fff98da113d258d440d3bf4b318d97b1f6a35e6e4afb606c738e79118eb826adc3e1532d938e3c5d2bcc0343cb7e0c34cc79d1dceeb9fd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { ButtonModule } from 'primeng/button';\nimport { MessageModule } from 'primeng/message';\nimport { MessagesModule } from 'primeng/messages';\nimport { ToastModule } from 'primeng/toast';\nimport { TreeModule } from 'primeng/tree';\n\nimport { DemosModule } from './demos/demos.module';\nimport { DocsModule } from './docs/docs.module';\nimport { GuxModule } from './gux/gux.module';\n\n@NgModule({\n  declarations: [ AppComponent ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ButtonModule,\n    MessageModule,\n    MessagesModule,\n    ToastModule,\n    TreeModule,\n    AppRoutingModule,\n    DemosModule,\n    DocsModule,\n    GuxModule\n  ],\n  exports: [ ],\n  providers: [ ],\n  bootstrap: [ AppComponent ]\n})\n\nexport class AppModule {\n  /**\n  constructor(private cocoaDocsService: CocoaDocsService) {\n    this.cocoaDocsService.setDemoComponents({\n      GuxBadgeComponent: {\n        name: 'GuxBadgeDemoComponent',\n        demo: GuxBadgeDemoComponent\n      },\n      GuxBannerComponent: {\n        name: 'GuxBannerDemoComponent',\n        demo: GuxBannerDemoComponent\n      },\n      GuxButtonComponent: {\n        name: 'GuxButtonDemoComponent',\n        demo: GuxButtonDemoComponent\n      },\n      GuxCheckboxComponent: {\n        name: 'GuxCheckboxDemoComponent',\n        demo: GuxCheckboxDemoComponent\n      },\n      GuxInputDirective: {\n        name: 'GuxInputDemoComponent',\n        demo: GuxInputDemoComponent\n      }\n    });\n  }\n  */\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "DemosModule"
                        },
                        {
                            "name": "DocsModule"
                        },
                        {
                            "name": "GuxModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-b0d5ae6548e02e0d11021766105970feb2d4afd8a996d1c0cc8f7f6a432a002bb416f1b0e6dc30671ae7d42af659bc79a12b8162a5b6c03c41ed39df1f5fe951",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DocsComponent } from './docs/docs.component';\nconst routes: Routes = [{\n  path: '',\n  redirectTo: 'docs',\n  pathMatch: 'full'\n}, {\n  path: 'docs',\n  component: DocsComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DemosModule",
            "id": "module-DemosModule-089b684a5ed4907274fd39469ea04fa624af73c73f47b1308a36d502af10b75b43b22fa4e390d47b57fa8546cbc9169605473ef514a6fd32a3e8a466675bd6ae",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/demos/demos.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DemosModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DocsModule",
            "id": "module-DocsModule-592a8d95ee1cce8a4425319044307785677da44042e04fb653791d0d9224931fa92f3b93c3769ca9bd246141182e8bb38abaa1b9892345d0042a2ead29a3a9d0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/docs/docs.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DocsComponent } from './docs.component';\n\n\n\n@NgModule({\n  declarations: [\n    DocsComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DocsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DocsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GuxModule",
            "id": "module-GuxModule-083eea1e39b4003832d05d7cbb43f6ac3d3fe2f81bd2de5d61b43555d1455eb1682e330c2d3ffb27a03eaa3dbe03ab4a75af5cd3ef2d318931cbb34390d59a55",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/gux/gux.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class GuxModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Navigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/navigation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TreeNode[]",
                "defaultValue": "[\n  {\n    label: 'Home',\n    type: 'navigation',\n    data: '/'\n  }, {\n    label: 'AADAD Gux',\n    children: [\n      {\n        label: 'Components',\n        type: 'navigation',\n        data: 'components/home/cux',\n        children: [\n          {\n            label: 'Badge',\n            type: 'navigation',\n            data: 'components/CuxBadgeComponent'\n          },\n          {\n            label: 'Banner',\n            type: 'navigation',\n            data: 'components/CuxBannerComponent'\n          },\n          {\n            label: 'Button',\n            type: 'navigation',\n            data: 'components/CuxButtonComponent'\n          },\n          {\n            label: 'Checkbox',\n            type: 'navigation',\n            data: 'components/CuxCheckboxComponent'\n          },\n          {\n            label: 'Dropdown',\n            type: 'navigation',\n            data: 'components/CuxDropdownComponent'\n          },\n        ],\n      },\n      {\n        label: 'Services',\n        type: 'navigation',\n        data: 'services/home/cux',\n        children: [\n          {\n            label: 'Success Message',\n            type: 'navigation',\n            data: 'services/SuccessMessageService'\n          },\n        ],\n      },\n      {\n        label: 'Interfaces',\n        type: 'navigation',\n        data: 'interfaces/home/cux',\n        children: [\n          {\n            label: 'Accordion Item',\n            type: 'navigation',\n            data: 'interfaces/AccordionItem'\n          },\n          {\n            label: 'Accordion Items',\n            type: 'navigation',\n            data: 'interfaces/AccordionItems'\n          },\n          {\n            label: 'Accordion Title',\n            type: 'navigation',\n            data: 'interfaces/AccordionTitle'\n          },\n          {\n            label: 'Badge',\n            type: 'navigation',\n            data: 'interfaces/CuxBadgeModel'\n          },\n          {\n            label: 'Breadcrumb',\n            type: 'navigation',\n            data: 'interfaces/Breadcrumb'\n          },\n          {\n            label: 'Button',\n            type: 'navigation',\n            data: 'interfaces/Button'\n          },\n          {\n            label: '360 Summary Card',\n            type: 'navigation',\n            data: 'interfaces/CuxCard360SummaryCard'\n          },\n          {\n            label: 'Check Box',\n            type: 'navigation',\n            data: 'interfaces/CheckBoxItem'\n          },\n          {\n            label: 'Dropdown Item',\n            type: 'navigation',\n            data: 'interfaces/CuxDropdownItem'\n          },\n          {\n            label: 'Dropdown Item Value',\n            type: 'navigation',\n            data: 'interfaces/CuxDropDownItemValue'\n          },\n          {\n            label: 'Footer Button',\n            type: 'navigation',\n            data: 'interfaces/FooterButton',\n          },\n          {\n            label: 'Radio Button',\n            type: 'navigation',\n            data: 'interfaces/RadioButtonItem',\n          },\n          {\n            label: 'Selection Change',\n            type: 'navigation',\n            data: 'interfaces/SelectionChange'\n          },\n          {\n            label: 'Sidebar Data',\n            type: 'navigation',\n            data: 'interfaces/SideBarData'\n          },\n          {\n            label: 'Stepper Item',\n            type: 'navigation',\n            data: 'interfaces/StepperItem'\n          }\n        ]\n      }, {\n        label: 'Pipes',\n      }, {\n        label: 'Directives',\n        type: 'navigation',\n        data: 'directives/home/cux',\n        children: [{\n          label: 'Ellipsify',\n          type: 'navigation',\n          data: 'directives/CuxEllipsifyDirective'\n        }, {\n          label: 'Input',\n          type: 'navigation',\n          data: 'directives/CuxInputDirective'\n        }, {\n          label: 'Tooltip',\n          type: 'navigation',\n          data: 'directives/CuxTitleTooltipDirective'\n        }]\n      }, {\n        label: 'Miscellaneous',\n        type: 'navigation',\n        data: 'miscellaneous/home/cux',\n        children: [{\n          label: 'Variables, Enumerations, etc.',\n          type: 'navigation',\n          data: 'miscellaneous/cux'\n        }]\n      }\n    ]\n  }\n]"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/navigation.ts": [
                {
                    "name": "Navigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/navigation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "defaultValue": "[\n  {\n    label: 'Home',\n    type: 'navigation',\n    data: '/'\n  }, {\n    label: 'AADAD Gux',\n    children: [\n      {\n        label: 'Components',\n        type: 'navigation',\n        data: 'components/home/cux',\n        children: [\n          {\n            label: 'Badge',\n            type: 'navigation',\n            data: 'components/CuxBadgeComponent'\n          },\n          {\n            label: 'Banner',\n            type: 'navigation',\n            data: 'components/CuxBannerComponent'\n          },\n          {\n            label: 'Button',\n            type: 'navigation',\n            data: 'components/CuxButtonComponent'\n          },\n          {\n            label: 'Checkbox',\n            type: 'navigation',\n            data: 'components/CuxCheckboxComponent'\n          },\n          {\n            label: 'Dropdown',\n            type: 'navigation',\n            data: 'components/CuxDropdownComponent'\n          },\n        ],\n      },\n      {\n        label: 'Services',\n        type: 'navigation',\n        data: 'services/home/cux',\n        children: [\n          {\n            label: 'Success Message',\n            type: 'navigation',\n            data: 'services/SuccessMessageService'\n          },\n        ],\n      },\n      {\n        label: 'Interfaces',\n        type: 'navigation',\n        data: 'interfaces/home/cux',\n        children: [\n          {\n            label: 'Accordion Item',\n            type: 'navigation',\n            data: 'interfaces/AccordionItem'\n          },\n          {\n            label: 'Accordion Items',\n            type: 'navigation',\n            data: 'interfaces/AccordionItems'\n          },\n          {\n            label: 'Accordion Title',\n            type: 'navigation',\n            data: 'interfaces/AccordionTitle'\n          },\n          {\n            label: 'Badge',\n            type: 'navigation',\n            data: 'interfaces/CuxBadgeModel'\n          },\n          {\n            label: 'Breadcrumb',\n            type: 'navigation',\n            data: 'interfaces/Breadcrumb'\n          },\n          {\n            label: 'Button',\n            type: 'navigation',\n            data: 'interfaces/Button'\n          },\n          {\n            label: '360 Summary Card',\n            type: 'navigation',\n            data: 'interfaces/CuxCard360SummaryCard'\n          },\n          {\n            label: 'Check Box',\n            type: 'navigation',\n            data: 'interfaces/CheckBoxItem'\n          },\n          {\n            label: 'Dropdown Item',\n            type: 'navigation',\n            data: 'interfaces/CuxDropdownItem'\n          },\n          {\n            label: 'Dropdown Item Value',\n            type: 'navigation',\n            data: 'interfaces/CuxDropDownItemValue'\n          },\n          {\n            label: 'Footer Button',\n            type: 'navigation',\n            data: 'interfaces/FooterButton',\n          },\n          {\n            label: 'Radio Button',\n            type: 'navigation',\n            data: 'interfaces/RadioButtonItem',\n          },\n          {\n            label: 'Selection Change',\n            type: 'navigation',\n            data: 'interfaces/SelectionChange'\n          },\n          {\n            label: 'Sidebar Data',\n            type: 'navigation',\n            data: 'interfaces/SideBarData'\n          },\n          {\n            label: 'Stepper Item',\n            type: 'navigation',\n            data: 'interfaces/StepperItem'\n          }\n        ]\n      }, {\n        label: 'Pipes',\n      }, {\n        label: 'Directives',\n        type: 'navigation',\n        data: 'directives/home/cux',\n        children: [{\n          label: 'Ellipsify',\n          type: 'navigation',\n          data: 'directives/CuxEllipsifyDirective'\n        }, {\n          label: 'Input',\n          type: 'navigation',\n          data: 'directives/CuxInputDirective'\n        }, {\n          label: 'Tooltip',\n          type: 'navigation',\n          data: 'directives/CuxTitleTooltipDirective'\n        }]\n      }, {\n        label: 'Miscellaneous',\n        type: 'navigation',\n        data: 'miscellaneous/home/cux',\n        children: [{\n          label: 'Variables, Enumerations, etc.',\n          type: 'navigation',\n          data: 'miscellaneous/cux'\n        }]\n      }\n    ]\n  }\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "docs",
                        "pathMatch": "full"
                    },
                    {
                        "path": "docs",
                        "component": "DocsComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    }
}